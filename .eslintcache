[{"C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\index.jsx":"1","C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\App.jsx":"2","C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\Homepage.jsx":"3","C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\Board.jsx":"4","C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\LoginForm.jsx":"5","C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\SignupForm.jsx":"6","C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\ModalOne.jsx":"7","C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\List.jsx":"8","C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\ModalTwo.jsx":"9"},{"size":289,"mtime":1638355920103,"results":"10","hashOfConfig":"11"},{"size":565,"mtime":1638355920149,"results":"12","hashOfConfig":"11"},{"size":703,"mtime":1638355920226,"results":"13","hashOfConfig":"11"},{"size":1756,"mtime":1638355920187,"results":"14","hashOfConfig":"11"},{"size":2237,"mtime":1638355920308,"results":"15","hashOfConfig":"11"},{"size":2023,"mtime":1638355920426,"results":"16","hashOfConfig":"11"},{"size":650,"mtime":1638355920348,"results":"17","hashOfConfig":"11"},{"size":3348,"mtime":1638355920269,"results":"18","hashOfConfig":"11"},{"size":1141,"mtime":1638355920386,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"l58wke",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\index.jsx",[],["41","42"],"C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\App.jsx",[],"C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\Homepage.jsx",[],"C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\Board.jsx",[],"C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\LoginForm.jsx",["43"],"import React, { useState } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nconst LoginForm = () => {\n    const [auth,setAuth] = useState(false);\n    const findUser = (email, password) => {\n        const Users = JSON.parse(localStorage.getItem('Users'));\n\n        let success = false;\n        Users.forEach((user) => {\n            if (user.email === email && user.password === password) {\n                success = true;\n            }\n        });\n        return success;\n    }\n\n    const getUser = (e) => {\n        e.preventDefault();\n        const email = document.querySelector('#email').value;\n        const password = document.querySelector('#pwd').value;\n        if (findUser(email, password)) {\n            setAuth(true);\n            localStorage.setItem('CurrentUser',email);\n        }else{\n            alert('Check input again or sign up...');\n            setAuth(false);\n        }\n    }\n    if(auth){\n        return <Redirect to='/board' />\n    }else{\n    return (\n        <div className=\"form-container\">\n            <h3>Log in</h3>\n            <form className=\"home-form\">\n                <div className=\"input-container\">\n                    <i className=\"fa fa-envelope icon\"></i>\n                    <input type=\"email\" name=\"email\" placeholder=\"Email Address\" id='email'/>\n                </div>\n                <div className=\"input-container\">\n                    <i className=\"fa fa-key icon\"></i>\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" id='pwd' />\n                </div>\n                <div className=\"form-footer\">\n                    <div className=\"form-checkbox\">\n                        <input type=\"checkbox\" name=\"checkbox\" id=\"\"/>\n                        <label htmlFor=\"checkbox\">Remember me</label>\n                    </div>\n                    <a href=\"#\">Forgot Password ?</a>\n                </div>\n                <div className=\"input-container\">\n                        <button  \n                        type=\"submit\" \n                        className=\"form-btn\"\n                        onClick = {getUser}\n                        >Log In</button>\n                </div>\n            </form>\n        </div>\n    );\n    }\n}\n\nexport default LoginForm\n","C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\SignupForm.jsx",[],"C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\ModalOne.jsx",[],"C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\List.jsx",["44"],"import React, { useState } from 'react';\nimport ModalTwo from './ModalTwo';\n\nconst List = (props) => {\n    const [value,setValue] = useState(\"\");\n    const [tasks,setTasks] = useState([]);\n    const [showEdit,setShowEdit] = useState(false);\n    const [currentIdx,setCurrentIdx] = useState(0);\n\n    const handleChange = (e)=>{\n        setValue(e.target.value);\n    };\n\n    const addTask = ()=>{\n        const info = {\n            title : value,\n            date : '',\n            desc : ''\n        }\n        setTasks((prev)=>{\n            return [...prev,info];\n        });\n        setValue(\"\");\n    };\n\n    const handleCheck = (e)=>{\n        const chkbtn = e.target;\n        if(chkbtn.classList.contains('fa-circle-thin')){\n            chkbtn.classList.replace('fa-circle-thin','fa-check-circle');\n            chkbtn.nextSibling.style.textDecoration = \"line-through\";\n        }else{\n            chkbtn.classList.replace('fa-check-circle', 'fa-circle-thin');\n            chkbtn.nextSibling.style.textDecoration = \"none\";\n        }\n    };\n\n    const closeEdit = ()=>{\n        setShowEdit(false);\n    };\n\n    const handleEdit = (e) => {\n        setShowEdit(true);\n        const index = e.target.getAttribute(\"id\");\n        setCurrentIdx(index);\n    };\n\n    const handleSave = (data)=>{\n        let newTasks = tasks;\n        newTasks[currentIdx].date = data.date;\n        newTasks[currentIdx].desc = data.desc;\n        setTasks(newTasks);\n    };\n\n    const handleDelete = ()=>{\n        let newTasks = tasks.filter((task,index)=>{\n            return(currentIdx!=index)\n        });\n        setTasks(newTasks);\n    }\n    return (\n        <>\n        {showEdit? <ModalTwo  title={tasks[currentIdx].title} close={closeEdit} save = {handleSave} delete={handleDelete}/> : null }\n        {showEdit ? <div className=\"overlay\"></div> : null}\n        <div className=\"list-card\">\n            <h3>{props.text}</h3>\n            <div className=\"input-container\">\n                <input type=\"text\"  placeholder=\"New Task\" id=\"task-item\" value={value} onChange={handleChange}/>\n                <button className=\"add-task-btn\" onClick = {addTask}>\n                    <i className=\"fa fa-plus-circle\"></i>\n                </button>\n            </div>\n            <div className=\"task-container\">\n                <ul className=\"task-list\">\n                    {\n                        tasks.map((task,index) => {\n                            return (\n                                <div>\n                                    <div className=\"task-list-item\">\n                                        <i className=\"fa fa-circle-thin\" onClick={(e) => handleCheck(e)}></i>\n                                        <li>{task.title}</li>\n                                        <i className=\"fa fa-edit\" id={index} onClick={handleEdit}></i>\n                                    </div>\n                                    <div className=\"task-info\">\n                                        <p className=\"task-desc\">{task.desc}</p>\n                                        <p className=\"task-date\"><em>{task.date}</em></p>\n                                    </div>\n                                </div>\n                            );\n                        })\n                    }\n                </ul>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default List\n","C:\\Users\\apoorv dixit\\Desktop\\taskboard-react-master\\src\\components\\ModalTwo.jsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":50,"column":21,"nodeType":"51","endLine":50,"endColumn":33},{"ruleId":"52","severity":1,"message":"53","line":56,"column":30,"nodeType":"54","messageId":"55","endLine":56,"endColumn":32},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]